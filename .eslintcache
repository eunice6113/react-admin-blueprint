[{"/Users/lyk/WebstormProjects/react-admin-blueprint/src/index.tsx":"1","/Users/lyk/WebstormProjects/react-admin-blueprint/src/reportWebVitals.ts":"2","/Users/lyk/WebstormProjects/react-admin-blueprint/src/App.tsx":"3","/Users/lyk/WebstormProjects/react-admin-blueprint/src/example/tabsExample.tsx":"4","/Users/lyk/WebstormProjects/react-admin-blueprint/src/example/treeExample.tsx":"5"},{"size":516,"mtime":1608535239775,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1608533420520,"results":"8","hashOfConfig":"7"},{"size":1289,"mtime":1608535284496,"results":"9","hashOfConfig":"7"},{"size":5767,"mtime":1608534010647,"results":"10","hashOfConfig":"7"},{"size":4760,"mtime":1608535562499,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"b2xfl6",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/lyk/WebstormProjects/react-admin-blueprint/src/index.tsx",[],["24","25"],"/Users/lyk/WebstormProjects/react-admin-blueprint/src/reportWebVitals.ts",[],"/Users/lyk/WebstormProjects/react-admin-blueprint/src/App.tsx",["26","27","28"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Button, Intent, Spinner, Menu, MenuItem, Navbar, Alignment } from \"@blueprintjs/core\";\nimport {TabsExample} from \"./example/tabsExample\";\nimport {TreeExample} from \"./example/treeExample\";\n\nfunction App() {\n\n    const mySpinner = <Spinner intent={Intent.PRIMARY} />;\n\n    const myButton = React.createElement(Button, { intent: Intent.SUCCESS }, \"button content\");\n\n    return (\n        <div className=\"App\">\n            <Menu>\n                <MenuItem text=\"Submenu\">\n                    <MenuItem text=\"Child one\" />\n                    <MenuItem text=\"Child two\" />\n                    <MenuItem text=\"Child three\" />\n                </MenuItem>\n            </Menu>\n\n\n            <Navbar>\n                <Navbar.Group align={Alignment.RIGHT}>\n                    <Navbar.Heading>Blueprint</Navbar.Heading>\n                    <Navbar.Divider />\n                    <Button className=\"bp3-minimal\" icon=\"home\" text=\"Home\" />\n                    <Button className=\"bp3-minimal\" icon=\"document\" text=\"Files\" />\n                </Navbar.Group>\n            </Navbar>\n\n\n            <TabsExample id='tabs'/>\n            \n            <TreeExample id='trees'/>\n\n        </div>\n    );\n}\n\nexport default App;\n","/Users/lyk/WebstormProjects/react-admin-blueprint/src/example/tabsExample.tsx",[],"/Users/lyk/WebstormProjects/react-admin-blueprint/src/example/treeExample.tsx",["29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":2,"column":8,"nodeType":"36","messageId":"37","endLine":2,"endColumn":12},{"ruleId":"34","severity":1,"message":"38","line":10,"column":11,"nodeType":"36","messageId":"37","endLine":10,"endColumn":20},{"ruleId":"34","severity":1,"message":"39","line":12,"column":11,"nodeType":"36","messageId":"37","endLine":12,"endColumn":19},{"ruleId":"40","severity":1,"message":"41","line":29,"column":48,"nodeType":"36","messageId":"42","endLine":29,"endColumn":61},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'mySpinner' is assigned a value but never used.","'myButton' is assigned a value but never used.","@typescript-eslint/no-use-before-define","'INITIAL_STATE' was used before it was defined.","noUseBeforeDefine","no-global-assign","no-unsafe-negation"]